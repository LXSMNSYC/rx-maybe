var Maybe=function(r){"use strict";r=r&&r.hasOwnProperty("default")?r.default:r;const e=(r,e)=>typeof r===e,o=r=>e(r,"function"),t=r=>e(r,"number"),n=r=>e(r,"object"),s=r=>n(r)&&o(r[Symbol.iterator]),c=r=>n(r)&&o(r.onSubscribe),i=r=>null!=r&&(r instanceof Promise||(n(r)||o(r))&&o(r.then));function u(r){const{onSuccess:e,onError:o,controller:t}=this;if(!t.signal.aborted)try{null==r?o(new Error("onSuccess called with null value.")):e(r)}finally{t.abort()}}function b(){const{onComplete:r,controller:e}=this;if(!e.signal.aborted)try{r()}finally{e.abort()}}function a(r){const{onError:e,controller:o}=this;let t=r;if(r instanceof Error||(t=new Error("onError called with a non-Error value.")),!o.signal.aborted)try{e(t)}finally{o.abort()}}const l=r=>r,h=r=>{throw r},d=r=>({onSubscribe:r.onSubscribe,onSuccess:o(r.onSuccess)?r.onSuccess:l,onComplete:o(r.onComplete)?r.onComplete:l,onError:o(r.onError)?r.onError:h}),f=(e,o)=>{const{onSubscribe:t,onSuccess:n}=d(e),s=new r;t(s),s.signal.aborted||(n(o),s.abort())},S=e=>{const{onSubscribe:o,onComplete:t}=d(e),n=new r;o(n),n.signal.aborted||(t(),n.abort())},E=(e,o)=>{const{onSubscribe:t,onError:n}=d(e),s=new r;t(s),s.signal.aborted||(n(o),s.abort())};function m(r){let e;try{if(null==(e=this.supplier()))throw new Error("Maybe.error: Error supplier returned a null value.")}catch(r){e=r}E(r,e)}var p=r=>{let e=r;r instanceof Error||o(r)||(e=new Error("Maybe.error received a non-Error value.")),o(r)||(e=(r=>()=>r)(e));const t=new re(m);return t.supplier=e,t};function v(e){const{onSuccess:o,onComplete:t,onError:n,onSubscribe:s}=d(e),c=new r,{signal:i}=c;if(s(c),i.aborted)return;const{sources:u}=this;for(const r of u){if(i.aborted)return;if(!(r instanceof re)){n(new Error("Maybe.amb: One of the sources is a non-Maybe.")),c.abort();break}r.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){t(),c.abort()},onSuccess(r){o(r),c.abort()},onError(r){n(r),c.abort()}})}}var w=r=>{if(!s(r))return p(new Error("Maybe.amb: sources is not Iterable."));const e=new re(v);return e.sources=r,e};function C(e){const{onSuccess:o,onComplete:t,onError:n,onSubscribe:s}=d(e),c=new r,{signal:i}=c;if(s(c),i.aborted)return;const u=()=>{i.aborted||(t(),c.abort())},b=r=>{i.aborted||(o(r),c.abort())},a=r=>{i.aborted||(n(r),c.abort())},{source:l,other:h}=this;l.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete:u,onSuccess:b,onError:a}),h.subscribeWith({onSubscribe(r){i.aborted?r.abort():i.addEventListener("abort",()=>r.abort())},onComplete:u,onSuccess:b,onError:a})}var y=(r,e)=>{if(!(e instanceof re))return r;const o=new re(C);return o.source=r,o.other=e,o};function W(e){const{onSuccess:o,onComplete:t,onError:n,onSubscribe:s}=d(e),{source:c,cached:i,observers:u,subscribed:b}=this;if(i){const e=new r;s(e);const{value:c,error:i}=this;null!=c?o(c):null!=i?n(i):t(),e.abort()}else{const o=u.length;u[o]=e;const t=new r;if(t.signal.addEventListener("abort",()=>{u.splice(o,1)}),s(t),t.signal.aborted)return;b||(c.subscribeWith({onSubscribe(){},onSuccess:r=>{this.cached=!0,this.value=r;for(const e of u)e.onSuccess(r);this.observers=void 0},onComplete:()=>{this.cached=!0;for(const r of u)r.onComplete();this.observers=void 0},onError:r=>{this.cached=!0,this.error=r;for(const e of u)e.onError(r);this.observers=void 0}}),this.subscribed=!0)}}var g=r=>{const e=new re(W);return e.source=r,e.cached=!1,e.subscribed=!1,e.observers=[],e};function M(e){const{onSuccess:o,onComplete:t,onError:n,onSubscribe:s}=d(e),c=new r;c.onComplete=b.bind(this),c.onSuccess=u.bind(this),c.onError=a.bind(this),this.controller=c,this.onComplete=t,this.onSuccess=o,this.onError=n,s(c);try{this.subscriber(c)}catch(r){c.onError(r)}}var L=r=>{if(!o(r))return p(new Error("Maybe.create: There are no subscribers."));const e=new re(M);return e.subscriber=r,e},z=(r,e)=>{if(!o(e))return r;let t;try{if(!((t=e(r))instanceof re))throw new Error("Maybe.compose: transformer returned a non-Maybe.")}catch(r){t=p(r)}return t};function T(e){const{onSubscribe:o,onSuccess:t,onError:n}=d(e),s=new r;o(s);const{signal:c}=s;if(c.aborted)return;const{source:i,value:u}=this;i.subscribeWith({onSubscribe(r){c.addEventListener("abort",()=>r.abort())},onSuccess(r){t(r),s.abort()},onComplete(){t(u),s.abort()},onError(r){n(r),s.abort()}})}var O=(r,e)=>{if(null==e)return r;const o=new re(T);return o.source=r,o.value=e,o};function P(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r);let s,c;try{if(!((s=this.supplier())instanceof re))throw new Error("Maybe.defer: supplier returned a non-Maybe.")}catch(r){c=r}null!=c?E(r,c):s.subscribeWith({onSubscribe:n,onComplete:o,onSuccess:e,onError:t})}var A=r=>{const e=new re(P);return e.supplier=r,e};function k(e){const{onSuccess:o,onComplete:t,onError:n,onSubscribe:s}=d(e),{amount:c,doDelayError:i}=this;let u;const b=new r,{signal:a}=b;s(b),a.aborted||(a.addEventListener("abort",()=>{void 0!==u&&clearTimeout(u)}),this.source.subscribeWith({onSubscribe(r){a.addEventListener("abort",()=>r.abort())},onSuccess(r){u=setTimeout(()=>{o(r),b.abort()},c)},onComplete(){u=setTimeout(()=>{t(),b.abort()},c)},onError(r){u=setTimeout(()=>{n(r),b.abort()},i?c:0)}}))}var I=(r,e,o)=>{if(!t(e))return r;const n=new re(k);return n.source=r,n.amount=e,n.doDelayError=o,n};function R(e){const{onSuccess:o,onComplete:t,onError:n,onSubscribe:s}=d(e),{amount:c}=this;let i;const u=new r,{signal:b}=u;b.addEventListener("abort",()=>{void 0!==i&&clearTimeout(i)}),s(u),b.aborted||(i=setTimeout(()=>{this.source.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onSuccess(r){o(r),u.abort()},onComplete(){t(),u.abort()},onError(r){n(r),u.abort()}})},c))}var x=(r,e)=>{if(!t(e))return r;const o=new re(R);return o.source=r,o.amount=e,o};function U(e){const{onSuccess:o,onComplete:t,onError:n,onSubscribe:s}=d(e),{source:c,other:i}=this,u=new r,{signal:b}=u;if(s(u),b.aborted)return;const a=()=>{b.aborted||c.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onComplete(){t(),u.abort()},onSuccess(r){o(r),u.abort()},onError(r){n(r),u.abort()}})};i.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onComplete:a,onSuccess:a,onError(r){n(r),u.abort()}})}var j=(r,e)=>{if(!(e instanceof re))return r;const o=new re(U);return o.source=r,o.other=e,o};function D(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:n,onSuccess(r){e(r),c(r)},onComplete:o,onError:t})}var N=(r,e)=>{if(!o(e))return r;const t=new re(D);return t.source=r,t.callable=e,t};function F(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:n,onSuccess(r){e(r),c()},onComplete(){o(),c()},onError(r){t(r),c()}})}var q=(r,e)=>{if(!o(e))return r;const t=new re(F);return t.source=r,t.callable=e,t};function B(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r),{source:s,callable:c}=this;let i=!1;s.subscribeWith({onSubscribe(r){r.signal.addEventListener("abort",()=>{i||(c(),i=!0)}),n(r)},onComplete(){o(),i||(c(),i=!0)},onSuccess(r){e(r),i||(c(),i=!0)},onError(r){t(r),i||(c(),i=!0)}})}var G=(r,e)=>{if(!o(e))return r;const t=new re(B);return t.source=r,t.callable=e,t};function H(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe(r){r.signal.addEventListener("abort",c),n(r)},onComplete:o,onSuccess:e,onError:t})}var J=(r,e)=>{if(!o(e))return r;const t=new re(H);return t.source=r,t.callable=e,t};function K(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:n,onComplete(){c(),o()},onSuccess:e,onError:t})}var Q=(r,e)=>{if(!o(e))return r;const t=new re(K);return t.source=r,t.callable=e,t};function V(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:n,onComplete:o,onSuccess:e,onError(r){c(r),t(r)}})}var X=(r,e)=>{if(!o(e))return r;const t=new re(V);return t.source=r,t.callable=e,t};function Y(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:n,onComplete(){c(),o()},onSuccess(r){c(r),e(r)},onError(r){c(void 0,r),t(r)}})}var Z=(r,e)=>{if(!o(e))return r;const t=new re(Y);return t.source=r,t.callable=e,t};function $(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:n,onComplete:o,onSuccess(r){c(r),e(r)},onError:t})}var _=(r,e)=>{if(!o(e))return r;const t=new re($);return t.source=r,t.callable=e,t};function rr(r){const{onSuccess:e,onError:o,onSubscribe:t}=d(r),{source:n,callable:s}=this;n.subscribeWith({onSubscribe(r){s(r),t(r)},onSuccess:e,onError:o})}var er=(r,e)=>{if(!o(e))return r;const t=new re(rr);return t.source=r,t.callable=e,t};function or(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:n,onComplete(){c(),o()},onSuccess(r){c(),e(r)},onError(r){c(),t(r)}})}var tr=(r,e)=>{if(!o(e))return r;const t=new re(or);return t.source=r,t.callable=e,t};function nr(r){S(r)}let sr;var cr=()=>(void 0===sr&&((sr=new re(nr)).subscribeActual=nr.bind(sr)),sr);function ir(e){const{onSubscribe:o,onSuccess:t,onComplete:n,onError:s}=d(e),c=new r;o(c);const{signal:i}=c;if(i.aborted)return;const{source:u,predicate:b}=this;u.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){n(),c.abort()},onSuccess(r){let e;try{e=b(r)}catch(r){return s(r),void c.abort()}e?t(r):n(),c.abort()},onError(r){s(r),c.abort()}})}var ur=(r,e)=>{if(!o(e))return r;const t=new re(ir);return t.source=r,t.predicate=e,t};function br(e){const{onSubscribe:o,onComplete:t,onError:n,onSuccess:s}=d(e),c=new r,{signal:i}=c;if(o(c),i.aborted)return;const{mapper:u,source:b}=this;b.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){t(),c.abort()},onSuccess(r){let e;try{if(!((e=u(r))instanceof re))throw new Error("Maybe.flatMap: mapper returned a non-Maybe")}catch(r){return void n(r)}e.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){t(),c.abort()},onSuccess(r){s(r),c.abort()},onError(r){n(r),c.abort()}})},onError(r){n(r),c.abort()}})}var ar=(r,e)=>{if(!o(e))return r;const t=new re(br);return t.source=r,t.mapper=e,t};function lr(e){const{onSuccess:o,onComplete:t,onError:n,onSubscribe:s}=d(e),c=new r;s(c),c.signal.aborted||this.promise.then(r=>null==r?t():o(r),n)}var hr=r=>{if(!i(r))return p(new Error("Maybe.fromPromise: expects a Promise-like value."));const e=new re(lr);return e.promise=r,e};function dr(e){const o=d(e),{onSuccess:t,onComplete:n,onError:s,onSubscribe:c}=o,u=new r;if(c(u),u.signal.aborted)return;let b;try{b=this.callable()}catch(r){return void s(r)}i(b)?hr(b).subscribeWith(o):null==b?n():t(b)}var fr=r=>{if(!o(r))return p(new Error("Maybe.fromCallable: callable received is not a function."));const e=new re(dr);return e.callable=r,e};function Sr(e){const{onSuccess:o,onComplete:t,onError:n,onSubscribe:s}=d(e),c=new r;if(s(c),c.signal.aborted)return;this.controller=c,this.onComplete=t,this.onSuccess=o,this.onError=n;const i=b.bind(this),l=u.bind(this),h=a.bind(this);this.subscriber(r=>null==r?i():l(r),h)}var Er=r=>{if(!o(r))return p(new Error("Maybe.fromResolvable: expects a function."));const e=new re(Sr);return e.subscriber=r,e};function mr(r){f(r,this.value)}var pr=r=>{if(null==r)return p(new Error("Maybe.just: received a null value."));const e=new re(mr);return e.value=r,e};function vr(r){let e;try{if(e=this.operator(r),!c(e))throw new Error("Maybe.lift: operator returned a non-Observer.")}catch(e){return void E(r,e)}this.source.subscribeWith(e)}var wr=(r,e)=>{if("function"!=typeof e)return r;const o=new re(vr);return o.source=r,o.operator=e,o};const Cr=r=>r;function yr(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r),{mapper:s}=this;this.source.subscribeWith({onSubscribe:n,onSuccess(r){let o;try{if(null==(o=s(r)))throw new Error("Maybe.map: mapper function returned a null value.")}catch(r){return void t(r)}e(o)},onComplete:o,onError:t})}var Wr=(r,e)=>{let t=e;o(e)||(t=Cr);const n=new re(yr);return n.source=r,n.mapper=t,n};function gr(e){const{onSubscribe:o,onComplete:t,onError:n,onSuccess:s}=d(e),c=new r,{signal:i}=c;o(c),i.aborted||this.source.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){t(),c.abort()},onSuccess(r){let e=r;r instanceof re||(e=p(new Error("Maybe.merge: source emitted a non-Maybe value."))),e.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){t(),c.abort()},onSuccess(r){s(r),c.abort()},onError(r){n(r),c.abort()}})},onError(r){n(r),c.abort()}})}var Mr=r=>{if(!(r instanceof re))return p(new Error("Maybe.merge: source is not a Maybe."));const e=new re(gr);return e.source=r,e};function Lr(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r),{source:s,item:c}=this;s.subscribeWith({onSubscribe:n,onComplete:o,onSuccess:e,onError(r){let e;try{e=c(r)}catch(e){return void t([r,e])}e?o():t(r)}})}var zr=(r,e)=>{if(!o(e))return r;const t=new re(Lr);return t.source=r,t.item=e,t};function Tr(e){const{onSuccess:t,onComplete:n,onError:s,onSubscribe:c}=d(e),{source:i,resumeIfError:u}=this,b=new r,{signal:a}=b;c(b),a.aborted||i.subscribeWith({onSubscribe(r){a.addEventListener("abort",()=>r.abort())},onComplete(){n(),b.abort()},onSuccess(r){t(r),b.abort()},onError(r){let e;if(o(u))try{if(null==(e=u(r)))throw new Error("Maybe.onErrorResumeNext: returned an non-Maybe.")}catch(e){return void s(new Error([r,e]))}else e=u;e.subscribeWith({onSubscribe(r){a.addEventListener("abort",()=>r.abort())},onComplete(){n(),b.abort()},onSuccess(r){t(r),b.abort()},onError(r){s(r),b.abort()}})}})}var Or=(r,e)=>{if(!(o(e)||e instanceof re))return r;const t=new re(Tr);return t.source=r,t.resumeIfError=e,t};function Pr(r){const{onSuccess:e,onComplete:o,onError:t,onSubscribe:n}=d(r),{source:s,item:c}=this;s.subscribeWith({onSubscribe:n,onComplete:o,onSuccess:e,onError(r){let n;try{n=c(r)}catch(e){return void t([r,e])}null==n?o():e(n)}})}var Ar=(r,e)=>{if(!o(e))return r;const t=new re(Pr);return t.source=r,t.item=e,t};function kr(r){const{onSuccess:e,onComplete:o,onSubscribe:t}=d(r),{source:n,item:s}=this;n.subscribeWith({onSubscribe:t,onComplete:o,onSuccess:e,onError(){e(s)}})}var Ir=(r,e)=>{if(null==e)return r;const o=new re(kr);return o.source=r,o.item=e,o};const Rr={signal:{aborted:!1,addEventListener:()=>{},removeEventListener:()=>{},onabort:()=>{}},abort:()=>{}};function xr(r){r.onSubscribe(Rr)}let Ur;var jr=()=>(void 0===Ur&&((Ur=new re(xr)).subscribeActual=xr.bind(Ur)),Ur);function Dr(e){const{onSubscribe:t,onComplete:n,onSuccess:s,onError:c}=d(e),i=new r,{signal:u}=i;if(t(i),u.aborted)return;const{source:b,bipredicate:a}=this;let l=0;const h=()=>{u.aborted||(l+=1,b.subscribeWith({onSubscribe(r){u.addEventListener("abort",()=>r.abort())},onComplete(){n(),i.abort()},onSuccess(r){s(r),i.abort()},onError(r){if(o(a)){a(l,r)?h():(c(r),i.abort())}else h()}}))};h()}var Nr=(r,e)=>{const o=new re(Dr);return o.source=r,o.bipredicate=e,o};function Fr(e){const{onSubscribe:o,onSuccess:t,onComplete:n,onError:s}=d(e),c=new r;o(c);const{signal:i}=c;if(i.aborted)return;const{source:u,other:b}=this;u.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onSuccess(r){t(r),c.abort()},onComplete(){b.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onSuccess(r){t(r),c.abort()},onComplete(){n(),c.abort()},onError(r){s(r),c.abort()}})},onError(r){s(r),c.abort()}})}var qr=(r,e)=>{if(!(e instanceof re))return r;const o=new re(Fr);return o.source=r,o.other=e,o};function Br(e){const{onSubscribe:o,onComplete:t,onSuccess:n,onError:s}=d(e),c=new r,{signal:i}=c;if(o(c),i.aborted)return;const{source:u,other:b}=this;b.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){s(new Error("Maybe.takeUntil: Source cancelled by other Maybe.")),c.abort()},onSuccess(){s(new Error("Maybe.takeUntil: Source cancelled by other Maybe.")),c.abort()},onError(r){s(new Error(["Maybe.takeUntil: Source cancelled by other Maybe.",r])),c.abort()}}),u.subscribeWith({onSubscribe(r){i.aborted?r.abort():i.addEventListener("abort",()=>r.abort())},onComplete(){t(),c.abort()},onSuccess(r){n(r),c.abort()},onError(r){s(r),c.abort()}})}const Gr=(r,e)=>{if(!(e instanceof re))return r;const o=new re(Br);return o.source=r,o.other=e,o};function Hr(e){const{onSuccess:o,onSubscribe:t}=d(e),n=new r,{signal:s}=n;if(t(n),s.aborted)return;const c=setTimeout(o,this.amount,0);s.addEventListener("abort",()=>{clearTimeout(c)})}var Jr=r=>{if(!t(r))return p(new Error('Maybe.timer: "amount" is not a number.'));const e=new re(Hr);return e.amount=r,e};function Kr(e){const{onSuccess:o,onComplete:t,onError:n,onSubscribe:s}=d(e),{amount:c}=this,i=new r,{signal:u}=i;if(s(i),u.aborted)return;const b=setTimeout(()=>{n(new Error("Maybe.timeout: TimeoutException (no success/completion signals within the specified timeout).")),i.abort()},c);u.addEventListener("abort",()=>{clearTimeout(b)}),this.source.subscribeWith({onSubscribe(r){u.addEventListener("abort",()=>r.abort())},onComplete(){t(),i.abort()},onSuccess(r){o(r),i.abort()},onError(r){n(r),i.abort()}})}var Qr=(r,e)=>{if(!t(e))return r;const o=new re(Kr);return o.source=r,o.amount=e,o};const Vr=r=>r;function Xr(e){const{onSuccess:o,onComplete:t,onError:n,onSubscribe:s}=d(e),c=[],i=new r,{signal:u}=i;if(s(i),u.aborted)return;const{sources:b,zipper:a}=this,l=b.length;if(0===l)return n(new Error("Maybe.zip: empty iterable")),void i.abort();let h=l;for(let r=0;r<l;r+=1){if(u.aborted)return;const e=b[r];if(e instanceof re)e.subscribeWith({onSubscribe(r){u.addEventListener("abort",()=>r.abort())},onComplete(){t(),i.abort()},onSuccess(e){if(!u.aborted&&(c[r]=e,0===(h-=1))){let r;try{if(null==(r=a(c)))throw new Error("Maybe.zip: zipper function returned a null value.")}catch(r){return n(r),void i.abort()}o(r),i.abort()}},onError(r){n(r),i.abort()}});else{if(null==e){n(new Error("Maybe.zip: One of the sources is undefined.")),i.abort();break}c[r]=e,h-=1}}}var Yr=(r,e)=>{if(!s(r))return p(new Error("Maybe.zip: sources is not Iterable."));let t=e;o(e)||(t=Vr);const n=new re(Xr);return n.sources=r,n.zipper=t,n};const Zr=(r,e)=>[r,e];function $r(e){const{onSuccess:o,onComplete:t,onError:n,onSubscribe:s}=d(e);let c,i;const u=new r,{signal:b}=u;if(s(u),b.aborted)return;const{source:a,other:l,zipper:h}=this;a.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onComplete(){t(),u.abort()},onSuccess(r){if(!b.aborted&&(c=r,null!=i)){let r;try{if(null==(r=h(c,i)))throw new Error("Maybe.zipWith: zipper function returned a null value.")}catch(r){return n(r),void u.abort()}o(r),u.abort()}},onError(r){n(r),u.abort()}}),l.subscribeWith({onSubscribe(r){b.aborted?r.abort():b.addEventListener("abort",()=>r.abort())},onComplete(){t(),u.abort()},onSuccess(r){if(!b.aborted&&(i=r,null!=c)){let r;try{if(null==(r=h(c,i)))throw new Error("Maybe.zipWith: zipper function returned a null value.")}catch(r){return n(r),void u.abort()}o(r),u.abort()}},onError(r){n(r),u.abort()}})}var _r=(r,e,t)=>{if(!(e instanceof re))return r;let n=t;o(t)||(n=Zr);const s=new re($r);return s.source=r,s.other=e,s.zipper=n,s};class re{constructor(r){this.subscribeActual=r}static amb(r){return w(r)}ambWith(r){return y(this,r)}cache(){return g(this)}compose(r){return z(this,r)}static create(r){return L(r)}defaultIfEmpty(r){return O(this,r)}static defer(r){return A(r)}delay(r,e){return I(this,r,e)}delaySubscription(r){return x(this,r)}delayUntil(r){return j(this,r)}doAfterSuccess(r){return N(this,r)}doAfterTerminate(r){return q(this,r)}doFinally(r){return G(this,r)}doOnAbort(r){return J(this,r)}doOnComplete(r){return Q(this,r)}doOnError(r){return X(this,r)}doOnEvent(r){return Z(this,r)}doOnSubscribe(r){return er(this,r)}doOnSuccess(r){return _(this,r)}doOnTerminate(r){return tr(this,r)}static empty(){return cr()}static error(r){return p(r)}filter(r){return ur(this,r)}flatMap(r){return ar(this,r)}static fromCallable(r){return fr(r)}static fromPromise(r){return hr(r)}static fromResolvable(r){return Er(r)}static just(r){return pr(r)}lift(r){return wr(this,r)}map(r){return Wr(this,r)}static merge(r){return Mr(r)}static never(){return jr()}onErrorComplete(r){return zr(this,r)}onErrorResumeNext(r){return Or(this,r)}onErrorReturn(r){return Ar(this,r)}onErrorReturnItem(r){return Ir(this,r)}retry(r){return Nr(this,r)}switchIfEmpty(r){return qr(this,r)}takeUntil(r){return Gr(this,r)}timeout(r){return Qr(this,r)}static timer(r){return Jr(r)}static zip(r,e){return Yr(r,e)}zipWith(r,e){return _r(this,r,e)}subscribeWith(r){c(r)&&this.subscribeActual.call(this,r)}subscribe(e,o,t){const n=new r;let s=!1;return this.subscribeWith({onSubscribe(r){r.signal.addEventListener("abort",()=>{s||(s=!0,n.signal.aborted||n.abort())}),n.signal.addEventListener("abort",()=>{s||(s=!0,r.signal.aborted||r.abort())})},onComplete:o,onSuccess:e,onError:t}),n}toPromise(){return new Promise((r,e)=>{this.subscribe(r,e)})}then(r,e){return this.toPromise().then(r,e)}catch(r){return this.toPromise().catch(r)}}return re}(AbortController);