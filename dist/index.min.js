var Maybe=function(r,e){"use strict";r=r&&r.hasOwnProperty("default")?r.default:r,e=e&&e.hasOwnProperty("default")?e.default:e;const o=(r,e)=>typeof r===e,n=r=>o(r,"function"),t=r=>o(r,"number"),s=r=>o(r,"object"),c=r=>s(r)&&n(r[Symbol.iterator]),i=r=>s(r)&&n(r.onSubscribe),u=r=>null!=r&&(r instanceof Promise||(s(r)||n(r))&&n(r.then));function b(r){const{onSuccess:e,onError:o,controller:n}=this;if(!n.signal.aborted)try{null==r?o(new Error("onSuccess called with null value.")):e(r)}finally{n.abort()}}function a(){const{onComplete:r,controller:e}=this;if(!e.signal.aborted)try{r()}finally{e.abort()}}function l(r){const{onError:e,controller:o}=this;let n=r;if(r instanceof Error||(n=new Error("onError called with a non-Error value.")),!o.signal.aborted)try{e(n)}finally{o.abort()}}const h=r=>r,d=r=>{throw r},f=r=>({onSubscribe:r.onSubscribe,onSuccess:n(r.onSuccess)?r.onSuccess:h,onComplete:n(r.onComplete)?r.onComplete:h,onError:n(r.onError)?r.onError:d}),S=(e,o)=>{const{onSubscribe:n,onSuccess:t}=f(e),s=new r;n(s),s.signal.aborted||(t(o),s.abort())},E=e=>{const{onSubscribe:o,onComplete:n}=f(e),t=new r;o(t),t.signal.aborted||(n(),t.abort())},p=(e,o)=>{const{onSubscribe:n,onError:t}=f(e),s=new r;n(s),s.signal.aborted||(t(o),s.abort())};function m(r){let e;try{if(null==(e=this.supplier()))throw new Error("Maybe.error: Error supplier returned a null value.")}catch(r){e=r}p(r,e)}var v=r=>{let e=r;r instanceof Error||n(r)||(e=new Error("Maybe.error received a non-Error value.")),n(r)||(e=(r=>()=>r)(e));const o=new se(m);return o.supplier=e,o};function w(e){const{onSuccess:o,onComplete:n,onError:t,onSubscribe:s}=f(e),c=new r,{signal:i}=c;if(s(c),i.aborted)return;const{sources:u}=this;for(const r of u){if(i.aborted)return;if(!(r instanceof se)){t(new Error("Maybe.amb: One of the sources is a non-Maybe.")),c.abort();break}r.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){n(),c.abort()},onSuccess(r){o(r),c.abort()},onError(r){t(r),c.abort()}})}}var C=r=>{if(!c(r))return v(new Error("Maybe.amb: sources is not Iterable."));const e=new se(w);return e.sources=r,e};function y(e){const{onSuccess:o,onComplete:n,onError:t,onSubscribe:s}=f(e),c=new r,{signal:i}=c;if(s(c),i.aborted)return;const u=()=>{i.aborted||(n(),c.abort())},b=r=>{i.aborted||(o(r),c.abort())},a=r=>{i.aborted||(t(r),c.abort())},{source:l,other:h}=this;l.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete:u,onSuccess:b,onError:a}),h.subscribeWith({onSubscribe(r){i.aborted?r.abort():i.addEventListener("abort",()=>r.abort())},onComplete:u,onSuccess:b,onError:a})}var W=(r,e)=>{if(!(e instanceof se))return r;const o=new se(y);return o.source=r,o.other=e,o};function g(e){const{onSuccess:o,onComplete:n,onError:t,onSubscribe:s}=f(e),{source:c,cached:i,observers:u,subscribed:b}=this;if(i){const e=new r;s(e);const{value:c,error:i}=this;null!=c?o(c):null!=i?t(i):n(),e.abort()}else{const o=u.length;u[o]=e;const n=new r;if(n.signal.addEventListener("abort",()=>{u.splice(o,1)}),s(n),n.signal.aborted)return;b||(c.subscribeWith({onSubscribe(){},onSuccess:r=>{this.cached=!0,this.value=r;for(const e of u)e.onSuccess(r);this.observers=void 0},onComplete:()=>{this.cached=!0;for(const r of u)r.onComplete();this.observers=void 0},onError:r=>{this.cached=!0,this.error=r;for(const e of u)e.onError(r);this.observers=void 0}}),this.subscribed=!0)}}var M=r=>{const e=new se(g);return e.source=r,e.cached=!1,e.subscribed=!1,e.observers=[],e};function L(e){const{onSuccess:o,onComplete:n,onError:t,onSubscribe:s}=f(e),c=new r;c.onComplete=a.bind(this),c.onSuccess=b.bind(this),c.onError=l.bind(this),this.controller=c,this.onComplete=n,this.onSuccess=o,this.onError=t,s(c);try{this.subscriber(c)}catch(r){c.onError(r)}}var z=r=>{if(!n(r))return v(new Error("Maybe.create: There are no subscribers."));const e=new se(L);return e.subscriber=r,e},O=(r,e)=>{if(!n(e))return r;let o;try{if(!((o=e(r))instanceof se))throw new Error("Maybe.compose: transformer returned a non-Maybe.")}catch(r){o=v(r)}return o};function P(e){const{onSubscribe:o,onSuccess:n,onError:t}=f(e),s=new r;o(s);const{signal:c}=s;if(c.aborted)return;const{source:i,value:u}=this;i.subscribeWith({onSubscribe(r){c.addEventListener("abort",()=>r.abort())},onSuccess(r){n(r),s.abort()},onComplete(){n(u),s.abort()},onError(r){t(r),s.abort()}})}var A=(r,e)=>{if(null==e)return r;const o=new se(P);return o.source=r,o.value=e,o};function k(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r);let s,c;try{if(!((s=this.supplier())instanceof se))throw new Error("Maybe.defer: supplier returned a non-Maybe.")}catch(r){c=r}null!=c?p(r,c):s.subscribeWith({onSubscribe:t,onComplete:o,onSuccess:e,onError:n})}var I=r=>{const e=new se(k);return e.supplier=r,e};function R(e){const{onSuccess:o,onComplete:n,onError:t,onSubscribe:s}=f(e),{amount:c,scheduler:i,doDelayError:u}=this,b=new r,{signal:a}=b;s(b),a.aborted||this.source.subscribeWith({onSubscribe(r){a.addEventListener("abort",()=>{r.abort()})},onSuccess(r){const e=i.delay(()=>{o(r),b.abort()},c);a.addEventListener("abort",()=>{e.abort()})},onComplete(){const r=i.delay(()=>{n(),b.abort()},c);a.addEventListener("abort",()=>{r.abort()})},onError(r){const e=i.delay(()=>{t(r),b.abort()},u?c:0);a.addEventListener("abort",()=>{e.abort()})}})}var x=(r,o,n,s)=>{if(!t(o))return r;let c=n;c instanceof e.interface||(c=e.current);const i=new se(R);return i.source=r,i.amount=o,i.scheduler=c,i.doDelayError=s,i};function U(e){const{onSuccess:o,onComplete:n,onError:t,onSubscribe:s}=f(e),{amount:c,scheduler:i}=this,u=new r,{signal:b}=u;if(s(u),b.aborted)return;const a=i.delay(()=>{this.source.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onSuccess(r){o(r),u.abort()},onComplete(){n(),u.abort()},onError(r){t(r),u.abort()}})},c);b.addEventListener("abort",()=>a.abort())}var T=(r,o,n)=>{if(!t(o))return r;let s=n;s instanceof e.interface||(s=e.current);const c=new se(U);return c.source=r,c.amount=o,c.scheduler=s,c};function j(e){const{onSuccess:o,onComplete:n,onError:t,onSubscribe:s}=f(e),{source:c,other:i}=this,u=new r,{signal:b}=u;if(s(u),b.aborted)return;const a=()=>{b.aborted||c.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onComplete(){n(),u.abort()},onSuccess(r){o(r),u.abort()},onError(r){t(r),u.abort()}})};i.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onComplete:a,onSuccess:a,onError(r){t(r),u.abort()}})}var D=(r,e)=>{if(!(e instanceof se))return r;const o=new se(j);return o.source=r,o.other=e,o};function N(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:t,onSuccess(r){e(r),c(r)},onComplete:o,onError:n})}var F=(r,e)=>{if(!n(e))return r;const o=new se(N);return o.source=r,o.callable=e,o};function q(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:t,onSuccess(r){e(r),c()},onComplete(){o(),c()},onError(r){n(r),c()}})}var B=(r,e)=>{if(!n(e))return r;const o=new se(q);return o.source=r,o.callable=e,o};function G(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r),{source:s,callable:c}=this;let i=!1;s.subscribeWith({onSubscribe(r){r.signal.addEventListener("abort",()=>{i||(c(),i=!0)}),t(r)},onComplete(){o(),i||(c(),i=!0)},onSuccess(r){e(r),i||(c(),i=!0)},onError(r){n(r),i||(c(),i=!0)}})}var H=(r,e)=>{if(!n(e))return r;const o=new se(G);return o.source=r,o.callable=e,o};function J(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe(r){r.signal.addEventListener("abort",c),t(r)},onComplete:o,onSuccess:e,onError:n})}var K=(r,e)=>{if(!n(e))return r;const o=new se(J);return o.source=r,o.callable=e,o};function Q(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:t,onComplete(){c(),o()},onSuccess:e,onError:n})}var V=(r,e)=>{if(!n(e))return r;const o=new se(Q);return o.source=r,o.callable=e,o};function X(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:t,onComplete:o,onSuccess:e,onError(r){c(r),n(r)}})}var Y=(r,e)=>{if(!n(e))return r;const o=new se(X);return o.source=r,o.callable=e,o};function Z(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:t,onComplete(){c(),o()},onSuccess(r){c(r),e(r)},onError(r){c(void 0,r),n(r)}})}var $=(r,e)=>{if(!n(e))return r;const o=new se(Z);return o.source=r,o.callable=e,o};function _(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:t,onComplete:o,onSuccess(r){c(r),e(r)},onError:n})}var rr=(r,e)=>{if(!n(e))return r;const o=new se(_);return o.source=r,o.callable=e,o};function er(r){const{onSuccess:e,onError:o,onSubscribe:n}=f(r),{source:t,callable:s}=this;t.subscribeWith({onSubscribe(r){s(r),n(r)},onSuccess:e,onError:o})}var or=(r,e)=>{if(!n(e))return r;const o=new se(er);return o.source=r,o.callable=e,o};function nr(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r),{source:s,callable:c}=this;s.subscribeWith({onSubscribe:t,onComplete(){c(),o()},onSuccess(r){c(),e(r)},onError(r){c(),n(r)}})}var tr=(r,e)=>{if(!n(e))return r;const o=new se(nr);return o.source=r,o.callable=e,o};function sr(r){E(r)}let cr;var ir=()=>(void 0===cr&&((cr=new se(sr)).subscribeActual=sr.bind(cr)),cr);function ur(e){const{onSubscribe:o,onSuccess:n,onComplete:t,onError:s}=f(e),c=new r;o(c);const{signal:i}=c;if(i.aborted)return;const{source:u,predicate:b}=this;u.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){t(),c.abort()},onSuccess(r){let e;try{e=b(r)}catch(r){return s(r),void c.abort()}e?n(r):t(),c.abort()},onError(r){s(r),c.abort()}})}var br=(r,e)=>{if(!n(e))return r;const o=new se(ur);return o.source=r,o.predicate=e,o};function ar(e){const{onSubscribe:o,onComplete:n,onError:t,onSuccess:s}=f(e),c=new r,{signal:i}=c;if(o(c),i.aborted)return;const{mapper:u,source:b}=this;b.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){n(),c.abort()},onSuccess(r){let e;try{if(!((e=u(r))instanceof se))throw new Error("Maybe.flatMap: mapper returned a non-Maybe")}catch(r){return void t(r)}e.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){n(),c.abort()},onSuccess(r){s(r),c.abort()},onError(r){t(r),c.abort()}})},onError(r){t(r),c.abort()}})}var lr=(r,e)=>{if(!n(e))return r;const o=new se(ar);return o.source=r,o.mapper=e,o};function hr(e){const{onSuccess:o,onComplete:n,onError:t,onSubscribe:s}=f(e),c=new r;s(c),c.signal.aborted||this.promise.then(r=>null==r?n():o(r),t)}var dr=r=>{if(!u(r))return v(new Error("Maybe.fromPromise: expects a Promise-like value."));const e=new se(hr);return e.promise=r,e};function fr(e){const o=f(e),{onSuccess:n,onComplete:t,onError:s,onSubscribe:c}=o,i=new r;if(c(i),i.signal.aborted)return;let b;try{b=this.callable()}catch(r){return void s(r)}u(b)?dr(b).subscribeWith(o):null==b?t():n(b)}var Sr=r=>{if(!n(r))return v(new Error("Maybe.fromCallable: callable received is not a function."));const e=new se(fr);return e.callable=r,e};function Er(e){const{onSuccess:o,onComplete:n,onError:t,onSubscribe:s}=f(e),c=new r;if(s(c),c.signal.aborted)return;this.controller=c,this.onComplete=n,this.onSuccess=o,this.onError=t;const i=a.bind(this),u=b.bind(this),h=l.bind(this);this.subscriber(r=>null==r?i():u(r),h)}var pr=r=>{if(!n(r))return v(new Error("Maybe.fromResolvable: expects a function."));const e=new se(Er);return e.subscriber=r,e};function mr(r){S(r,this.value)}var vr=r=>{if(null==r)return v(new Error("Maybe.just: received a null value."));const e=new se(mr);return e.value=r,e};function wr(r){let e;try{if(e=this.operator(r),!i(e))throw new Error("Maybe.lift: operator returned a non-Observer.")}catch(e){return void p(r,e)}this.source.subscribeWith(e)}var Cr=(r,e)=>{if("function"!=typeof e)return r;const o=new se(wr);return o.source=r,o.operator=e,o};const yr=r=>r;function Wr(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r),{mapper:s}=this;this.source.subscribeWith({onSubscribe:t,onSuccess(r){let o;try{if(null==(o=s(r)))throw new Error("Maybe.map: mapper function returned a null value.")}catch(r){return void n(r)}e(o)},onComplete:o,onError:n})}var gr=(r,e)=>{let o=e;n(e)||(o=yr);const t=new se(Wr);return t.source=r,t.mapper=o,t};function Mr(e){const{onSubscribe:o,onComplete:n,onError:t,onSuccess:s}=f(e),c=new r,{signal:i}=c;o(c),i.aborted||this.source.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){n(),c.abort()},onSuccess(r){let e=r;r instanceof se||(e=v(new Error("Maybe.merge: source emitted a non-Maybe value."))),e.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){n(),c.abort()},onSuccess(r){s(r),c.abort()},onError(r){t(r),c.abort()}})},onError(r){t(r),c.abort()}})}var Lr=r=>{if(!(r instanceof se))return v(new Error("Maybe.merge: source is not a Maybe."));const e=new se(Mr);return e.source=r,e};function zr(e){const{onSubscribe:o,onSuccess:n,onComplete:t,onError:s}=f(e),{source:c,scheduler:i}=this,u=new r;o(u);const{signal:b}=u;b.aborted||c.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onSuccess(r){i.schedule(()=>{n(r),u.abort()})},onComplete(){i.schedule(()=>{t(),u.abort()})},onError(r){i.schedule(()=>{s(r),u.abort()})}})}var Or=(r,o)=>{let n=o;n instanceof e.interface||(n=e.current);const t=new se(zr);return t.source=r,t.scheduler=n,t};function Pr(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r),{source:s,item:c}=this;s.subscribeWith({onSubscribe:t,onComplete:o,onSuccess:e,onError(r){let e;try{e=c(r)}catch(e){return void n([r,e])}e?o():n(r)}})}var Ar=(r,e)=>{if(!n(e))return r;const o=new se(Pr);return o.source=r,o.item=e,o};function kr(e){const{onSuccess:o,onComplete:t,onError:s,onSubscribe:c}=f(e),{source:i,resumeIfError:u}=this,b=new r,{signal:a}=b;c(b),a.aborted||i.subscribeWith({onSubscribe(r){a.addEventListener("abort",()=>r.abort())},onComplete(){t(),b.abort()},onSuccess(r){o(r),b.abort()},onError(r){let e;if(n(u))try{if(null==(e=u(r)))throw new Error("Maybe.onErrorResumeNext: returned an non-Maybe.")}catch(e){return void s(new Error([r,e]))}else e=u;e.subscribeWith({onSubscribe(r){a.addEventListener("abort",()=>r.abort())},onComplete(){t(),b.abort()},onSuccess(r){o(r),b.abort()},onError(r){s(r),b.abort()}})}})}var Ir=(r,e)=>{if(!(n(e)||e instanceof se))return r;const o=new se(kr);return o.source=r,o.resumeIfError=e,o};function Rr(r){const{onSuccess:e,onComplete:o,onError:n,onSubscribe:t}=f(r),{source:s,item:c}=this;s.subscribeWith({onSubscribe:t,onComplete:o,onSuccess:e,onError(r){let t;try{t=c(r)}catch(e){return void n([r,e])}null==t?o():e(t)}})}var xr=(r,e)=>{if(!n(e))return r;const o=new se(Rr);return o.source=r,o.item=e,o};function Ur(r){const{onSuccess:e,onComplete:o,onSubscribe:n}=f(r),{source:t,item:s}=this;t.subscribeWith({onSubscribe:n,onComplete:o,onSuccess:e,onError(){e(s)}})}var Tr=(r,e)=>{if(null==e)return r;const o=new se(Ur);return o.source=r,o.item=e,o};const jr={signal:{aborted:!1,addEventListener:()=>{},removeEventListener:()=>{},onabort:()=>{}},abort:()=>{}};function Dr(r){r.onSubscribe(jr)}let Nr;var Fr=()=>(void 0===Nr&&((Nr=new se(Dr)).subscribeActual=Dr.bind(Nr)),Nr);function qr(e){const{onSubscribe:o,onComplete:t,onSuccess:s,onError:c}=f(e),i=new r,{signal:u}=i;if(o(i),u.aborted)return;const{source:b,bipredicate:a}=this;let l=0;const h=()=>{u.aborted||(l+=1,b.subscribeWith({onSubscribe(r){u.addEventListener("abort",()=>r.abort())},onComplete(){t(),i.abort()},onSuccess(r){s(r),i.abort()},onError(r){if(n(a)){a(l,r)?h():(c(r),i.abort())}else h()}}))};h()}var Br=(r,e)=>{const o=new se(qr);return o.source=r,o.bipredicate=e,o};function Gr(e){const{onSubscribe:o,onSuccess:n,onComplete:t,onError:s}=f(e),{source:c,scheduler:i}=this,u=new r;o(u);const{signal:b}=u;b.aborted||i.schedule(()=>{b.aborted||c.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onSuccess(r){n(r),u.abort()},onComplete(){t(),u.abort()},onError(r){s(r),u.abort()}})})}var Hr=(r,o)=>{let n=o;n instanceof e.interface||(n=e.current);const t=new se(Gr);return t.source=r,t.scheduler=n,t};function Jr(e){const{onSubscribe:o,onSuccess:n,onComplete:t,onError:s}=f(e),c=new r;o(c);const{signal:i}=c;if(i.aborted)return;const{source:u,other:b}=this;u.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onSuccess(r){n(r),c.abort()},onComplete(){b.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onSuccess(r){n(r),c.abort()},onComplete(){t(),c.abort()},onError(r){s(r),c.abort()}})},onError(r){s(r),c.abort()}})}var Kr=(r,e)=>{if(!(e instanceof se))return r;const o=new se(Jr);return o.source=r,o.other=e,o};function Qr(e){const{onSubscribe:o,onComplete:n,onSuccess:t,onError:s}=f(e),c=new r,{signal:i}=c;if(o(c),i.aborted)return;const{source:u,other:b}=this;b.subscribeWith({onSubscribe(r){i.addEventListener("abort",()=>r.abort())},onComplete(){s(new Error("Maybe.takeUntil: Source cancelled by other Maybe.")),c.abort()},onSuccess(){s(new Error("Maybe.takeUntil: Source cancelled by other Maybe.")),c.abort()},onError(r){s(new Error(["Maybe.takeUntil: Source cancelled by other Maybe.",r])),c.abort()}}),u.subscribeWith({onSubscribe(r){i.aborted?r.abort():i.addEventListener("abort",()=>r.abort())},onComplete(){n(),c.abort()},onSuccess(r){t(r),c.abort()},onError(r){s(r),c.abort()}})}const Vr=(r,e)=>{if(!(e instanceof se))return r;const o=new se(Qr);return o.source=r,o.other=e,o};function Xr(e){const{onSuccess:o,onSubscribe:n}=f(e),t=new r,{signal:s}=t;if(n(t),s.aborted)return;const c=this.scheduler.delay(()=>o(0),this.amount);s.addEventListener("abort",()=>c.abort())}var Yr=(r,o)=>{if(!t(r))return v(new Error('Maybe.timer: "amount" is not a number.'));let n=o;n instanceof e.interface||(n=e.current);const s=new se(Xr);return s.amount=r,s.scheduler=n,s};function Zr(e){const{onSuccess:o,onComplete:n,onError:t,onSubscribe:s}=f(e),{amount:c,scheduler:i}=this,u=new r,{signal:b}=u;if(s(u),b.aborted)return;const a=i.delay(()=>{t(new Error("Maybe.timeout: TimeoutException (no success signals within the specified timeout).")),u.abort()},c);b.addEventListener("abort",()=>a.abort()),this.source.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onSuccess(r){o(r),u.abort()},onComplete(){n(),u.abort()},onError(r){t(r),u.abort()}})}var $r=(r,o,n)=>{if(!t(o))return r;let s=n;s instanceof e.interface||(s=e.current);const c=new se(Zr);return c.source=r,c.amount=o,c.scheduler=s,c};const _r=r=>r;function re(e){const{onSuccess:o,onComplete:n,onError:t,onSubscribe:s}=f(e),c=[],i=new r,{signal:u}=i;if(s(i),u.aborted)return;const{sources:b,zipper:a}=this,l=b.length;if(0===l)return t(new Error("Maybe.zip: empty iterable")),void i.abort();let h=l;for(let r=0;r<l;r+=1){if(u.aborted)return;const e=b[r];if(e instanceof se)e.subscribeWith({onSubscribe(r){u.addEventListener("abort",()=>r.abort())},onComplete(){n(),i.abort()},onSuccess(e){if(!u.aborted&&(c[r]=e,0===(h-=1))){let r;try{if(null==(r=a(c)))throw new Error("Maybe.zip: zipper function returned a null value.")}catch(r){return t(r),void i.abort()}o(r),i.abort()}},onError(r){t(r),i.abort()}});else{if(null==e){t(new Error("Maybe.zip: One of the sources is undefined.")),i.abort();break}c[r]=e,h-=1}}}var ee=(r,e)=>{if(!c(r))return v(new Error("Maybe.zip: sources is not Iterable."));let o=e;n(e)||(o=_r);const t=new se(re);return t.sources=r,t.zipper=o,t};const oe=(r,e)=>[r,e];function ne(e){const{onSuccess:o,onComplete:n,onError:t,onSubscribe:s}=f(e);let c,i;const u=new r,{signal:b}=u;if(s(u),b.aborted)return;const{source:a,other:l,zipper:h}=this;a.subscribeWith({onSubscribe(r){b.addEventListener("abort",()=>r.abort())},onComplete(){n(),u.abort()},onSuccess(r){if(!b.aborted&&(c=r,null!=i)){let r;try{if(null==(r=h(c,i)))throw new Error("Maybe.zipWith: zipper function returned a null value.")}catch(r){return t(r),void u.abort()}o(r),u.abort()}},onError(r){t(r),u.abort()}}),l.subscribeWith({onSubscribe(r){b.aborted?r.abort():b.addEventListener("abort",()=>r.abort())},onComplete(){n(),u.abort()},onSuccess(r){if(!b.aborted&&(i=r,null!=c)){let r;try{if(null==(r=h(c,i)))throw new Error("Maybe.zipWith: zipper function returned a null value.")}catch(r){return t(r),void u.abort()}o(r),u.abort()}},onError(r){t(r),u.abort()}})}var te=(r,e,o)=>{if(!(e instanceof se))return r;let t=o;n(o)||(t=oe);const s=new se(ne);return s.source=r,s.other=e,s.zipper=t,s};class se{constructor(r){this.subscribeActual=r}static amb(r){return C(r)}ambWith(r){return W(this,r)}cache(){return M(this)}compose(r){return O(this,r)}static create(r){return z(r)}defaultIfEmpty(r){return A(this,r)}static defer(r){return I(r)}delay(r,e){return x(this,r,e)}delaySubscription(r){return T(this,r)}delayUntil(r){return D(this,r)}doAfterSuccess(r){return F(this,r)}doAfterTerminate(r){return B(this,r)}doFinally(r){return H(this,r)}doOnAbort(r){return K(this,r)}doOnComplete(r){return V(this,r)}doOnError(r){return Y(this,r)}doOnEvent(r){return $(this,r)}doOnSubscribe(r){return or(this,r)}doOnSuccess(r){return rr(this,r)}doOnTerminate(r){return tr(this,r)}static empty(){return ir()}static error(r){return v(r)}filter(r){return br(this,r)}flatMap(r){return lr(this,r)}static fromCallable(r){return Sr(r)}static fromPromise(r){return dr(r)}static fromResolvable(r){return pr(r)}static just(r){return vr(r)}lift(r){return Cr(this,r)}map(r){return gr(this,r)}static merge(r){return Lr(r)}static never(){return Fr()}observeOn(r){return Or(this,r)}onErrorComplete(r){return Ar(this,r)}onErrorResumeNext(r){return Ir(this,r)}onErrorReturn(r){return xr(this,r)}onErrorReturnItem(r){return Tr(this,r)}retry(r){return Br(this,r)}subscribeOn(r){return Hr(this,r)}switchIfEmpty(r){return Kr(this,r)}takeUntil(r){return Vr(this,r)}timeout(r){return $r(this,r)}static timer(r){return Yr(r)}static zip(r,e){return ee(r,e)}zipWith(r,e){return te(this,r,e)}subscribeWith(r){i(r)&&this.subscribeActual.call(this,r)}subscribe(e,o,n){const t=new r;let s=!1;return this.subscribeWith({onSubscribe(r){r.signal.addEventListener("abort",()=>{s||(s=!0,t.signal.aborted||t.abort())}),t.signal.addEventListener("abort",()=>{s||(s=!0,r.signal.aborted||r.abort())})},onComplete:o,onSuccess:e,onError:n}),t}toPromise(){return new Promise((r,e)=>{this.subscribe(r,e)})}then(r,e){return this.toPromise().then(r,e)}catch(r){return this.toPromise().catch(r)}}return se}(AbortController,Scheduler);